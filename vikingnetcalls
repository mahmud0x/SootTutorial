> Task :compileJava
> Task :processResources NO-SOURCE
> Task :classes
> Task :run
Detected Network/API Calls:
<android.net.Uri$Builder: android.net.Uri$Builder query(java.lang.String)>
<java.net.HttpURLConnection: boolean getFollowRedirects()>
<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>
<java.net.URL: java.lang.String getHost()>
<android.net.Uri: java.lang.String getAuthority()>
<java.net.URI: void <init>(java.lang.String)>
<android.net.Uri$Builder: android.net.Uri$Builder encodedQuery(java.lang.String)>
<java.net.URLConnection: void setDoOutput(boolean)>
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>
<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>
<android.net.Uri$Builder: android.net.Uri$Builder path(java.lang.String)>
<android.net.Uri: java.lang.String getScheme()>
<android.net.ConnectivityManager: boolean isActiveNetworkMetered()>
<java.net.URL: java.net.URLConnection openConnection()>
<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>
<java.net.URI: java.net.URI create(java.lang.String)>
<android.net.http.AndroidHttpClient: android.net.http.AndroidHttpClient newInstance(java.lang.String)>
<android.net.Uri: java.util.List getPathSegments()>
<java.net.URI: java.lang.String getHost()>
<android.net.Uri$Builder: java.lang.String toString()>
<java.net.URL: java.io.InputStream openStream()>
<android.net.NetworkInfo: boolean isConnectedOrConnecting()>
<java.net.URLConnection: java.util.Map getHeaderFields()>
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>
<java.net.URISyntaxException: java.lang.String getMessage()>
<android.net.Uri: boolean isOpaque()>
<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>
<java.net.URLConnection: void connect()>
<java.net.URLConnection: void addRequestProperty(java.lang.String,java.lang.String)>
<android.net.Uri: java.lang.String encode(java.lang.String,java.lang.String)>
<java.net.URI: java.lang.String getRawQuery()>
<java.net.URLConnection: java.io.OutputStream getOutputStream()>
<android.net.http.SslError: int getPrimaryError()>
<java.net.URLConnection: java.lang.String getContentType()>
<java.net.HttpURLConnection: int getResponseCode()>
<android.net.Uri$Builder: android.net.Uri$Builder authority(java.lang.String)>
<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>
<java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>
<android.net.TrafficStats: int getThreadStatsTag()>
<android.net.TrafficStats: void setThreadStatsTag(int)>
<android.net.TrafficStats: void incrementOperationCount(int,int)>
<android.net.Uri$Builder: void <init>()>
<android.net.Uri$Builder: android.net.Uri$Builder encodedFragment(java.lang.String)>
<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>
<android.net.Uri: java.lang.String toString()>
<java.net.URI: java.lang.String getScheme()>
<android.net.Uri$Builder: android.net.Uri$Builder encodedPath(java.lang.String)>
<java.net.URLConnection: java.lang.String getContentEncoding()>
<android.net.Uri: android.net.Uri fromParts(java.lang.String,java.lang.String,java.lang.String)>
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>
<android.net.Uri: java.lang.String getHost()>
<android.net.Uri: java.lang.String getQueryParameter(java.lang.String)>
<javax.net.ssl.HttpsURLConnection: void setSSLSocketFactory(javax.net.ssl.SSLSocketFactory)>
<android.net.Uri: android.net.Uri parse(java.lang.String)>
<java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>
<android.net.Uri$Builder: android.net.Uri build()>
<android.net.Uri: android.net.Uri fromFile(java.io.File)>
<android.net.Uri: android.net.Uri$Builder buildUpon()>
<android.net.NetworkInfo: int getType()>
<java.net.URL: void <init>(java.lang.String)>
<android.net.Uri: java.lang.String getEncodedQuery()>
<java.net.URL: java.lang.String toString()>
<android.net.TrafficStats: void clearThreadStatsTag()>
<android.net.Uri: boolean equals(java.lang.Object)>
<android.net.Uri: java.lang.String getPath()>
<android.net.Uri: java.lang.String decode(java.lang.String)>
<java.net.URLConnection: void setReadTimeout(int)>
<java.net.URL: java.lang.String getProtocol()>
<java.net.HttpURLConnection: java.lang.String getResponseMessage()>
<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>
<android.net.Uri: boolean isHierarchical()>
<android.net.NetworkInfo: android.net.NetworkInfo$DetailedState getDetailedState()>
<android.net.Uri: java.lang.String getLastPathSegment()>
<android.net.TrafficStats: void incrementOperationCount(int)>
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
<android.net.Uri: java.lang.String getQuery()>
<android.net.TrafficStats: void tagSocket(java.net.Socket)>
<android.net.Uri: boolean isAbsolute()>
<android.net.TrafficStats: void untagSocket(java.net.Socket)>
<java.net.URLConnection: java.io.InputStream getInputStream()>
<java.net.URLConnection: void setDefaultUseCaches(boolean)>
<android.net.Uri: java.util.Set getQueryParameterNames()>
<android.net.Uri: java.lang.String getEncodedFragment()>
<java.net.HttpURLConnection: void setFixedLengthStreamingMode(int)>
<android.net.Uri: java.lang.String getEncodedPath()>
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>
<java.net.URLConnection: void setConnectTimeout(int)>
<android.net.Uri$Builder: android.net.Uri$Builder appendEncodedPath(java.lang.String)>
<java.net.URI: java.lang.String getPath()>
<android.net.Uri: java.lang.String getSchemeSpecificPart()>
<java.net.URLConnection: void setDoInput(boolean)>
<android.net.NetworkInfo: boolean isConnected()>
<android.net.Uri: int getPort()>
<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>
<java.net.HttpURLConnection: void setInstanceFollowRedirects(boolean)>
<android.net.Uri: java.lang.String encode(java.lang.String)>
<java.net.URLConnection: int getContentLength()>
<android.net.http.SslError: java.lang.String getUrl()>
<java.net.HttpURLConnection: void disconnect()>
<java.net.URLConnection: void setUseCaches(boolean)>

BUILD SUCCESSFUL in 50s
2 actionable tasks: 2 executed
